import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.71457ee7.js";const A=JSON.parse('{"title":"fork项目同步更新","description":"","frontmatter":{},"headers":[],"relativePath":"handbook/git/fork.md","lastUpdated":1684068125000}'),l={name:"handbook/git/fork.md"},e=p(`<h1 id="fork项目同步更新" tabindex="-1">fork项目同步更新 <a class="header-anchor" href="#fork项目同步更新" aria-label="Permalink to &quot;fork项目同步更新&quot;">​</a></h1><blockquote><p>当我们 fork 一个开源仓库之后，应该怎样将上游的仓库同步到我们的 <code>fork</code> 上呢？</p></blockquote><div class="tip custom-block"><p class="custom-block-title">为复刻配置远程仓库</p><p>必须在 Git 中配置指向上游存储库的远程存储库，才能将你在分支中所做的更改同步到原始存储库。 这也允许您将在原始仓库中所做的更改同步到复刻中。</p></div><p><strong>1. 打开终端。</strong></p><p><strong>2. 列出当前为复刻配置的远程仓库。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-v</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (</span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>3.指定将与分支同步的新远程上游存储库。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">upstream</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>4.验证为复刻指定的新上游仓库。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-v</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (</span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git (</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (</span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>5.从上游仓库中获取分支和它们各自的 <code>commits</code>。将 <code>BRANCHNAME</code> 上的 commit 存储在本地分支 <code>upstream/BRANCHNAME</code> 上。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">fetch</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">upstream</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; remote: Counting objects: 75, done.</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; remote: Compressing objects: 100% (</span><span style="color:#61AFEF;">53/53</span><span style="color:#ABB2BF;">), done.</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; remote: Total 62 (</span><span style="color:#61AFEF;">delta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">27</span><span style="color:#ABB2BF;">), reused 44 (</span><span style="color:#61AFEF;">delta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">9</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Unpacking objects: 100% (</span><span style="color:#61AFEF;">62/62</span><span style="color:#ABB2BF;">), done.</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  * [new branch]      main     -&gt; upstream/main</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>6.切换你fork的本地默认分支（在本例中，我们使用 <code>main</code> ）。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">main</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Switched to branch </span><span style="color:#98C379;">&#39;main&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>7.将上游默认分支（在本例中为 <code>upstream/main</code> ）中的更改合并到本地默认分支中。这将使fork的默认分支与上游存储库同步，而不会丢失本地更改。</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">upstream/main</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Updating a422352..5fdff0f</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Fast-forward</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  README                    |    </span><span style="color:#61AFEF;">9</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-------</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  README.md                 |    </span><span style="color:#61AFEF;">7</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">++++++</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  2 files changed, 7 insertions(</span><span style="color:#61AFEF;">+</span><span style="color:#ABB2BF;">), 9 deletions(</span><span style="color:#61AFEF;">-</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  delete mode 100644 README</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  create mode 100644 README.md</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>8.如果你本地没有任何提交，Git 将改为执行 <code>fast-forward</code> ：</strong></p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">upstream/main</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Updating 34e91da..16c56ad</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt; Fast-forward</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  README.md                 |    </span><span style="color:#61AFEF;">5</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">+++--</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;  1 file changed, 3 insertions(</span><span style="color:#61AFEF;">+</span><span style="color:#ABB2BF;">), 2 deletions(</span><span style="color:#61AFEF;">-</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>同步你的 fork 仅仅只是更新了本地上对仓库的拷贝。如果要更新 GitHub 上你的 fork，则必须推送这些更改。</p></div><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">push</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,20),o=[e];function r(t,c,i,B,d,y){return n(),a("div",null,o)}const b=s(l,[["render",r]]);export{A as __pageData,b as default};
