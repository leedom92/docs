import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.237f4aa8.js";const m=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"handbook/xmselect/question.md","lastUpdated":1667488730000}'),e={name:"handbook/xmselect/question.md"},p=l(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><h2 id="formselects-与-xm-select" tabindex="-1">formSelects 与 xm-select <a class="header-anchor" href="#formselects-与-xm-select" aria-label="Permalink to &quot;formSelects 与 xm-select&quot;">​</a></h2><p><a href="https://github.com/hnzzmsf/layui-formSelects/" target="_blank" rel="noreferrer">formSelects</a>是作者很久以前开发的一款多选插件, 在jQuery时代还是相对比较稳定, 不过性能上有很大的问题。痛并思痛后，开始学习其他开源组件的编写方案，最后决定重新开发。</p><p><a href="https://gitee.com/maplemei/xm-select" target="_blank" rel="noreferrer">xm-select</a>作者精心二次开发的组件, 在formSelects的样式基础上进行了性能优化。目前看来还是比较稳定的 ^_^</p><h2 id="_1-在哪里下载" tabindex="-1">1.在哪里下载 <a class="header-anchor" href="#_1-在哪里下载" aria-label="Permalink to &quot;1.在哪里下载&quot;">​</a></h2><p><a href="https://gitee.com/maplemei/xm-select/releases" target="_blank" rel="noreferrer">Gitee码云下载</a>, 使用时引入<code>xm-select.js</code>即可, 已经内置了css, 具体请看<a href="/handbook/xmselect/install.html">入门指南</a></p><h2 id="_2-为什么多选不显示" tabindex="-1">2.为什么多选不显示 <a class="header-anchor" href="#_2-为什么多选不显示" aria-label="Permalink to &quot;2.为什么多选不显示&quot;">​</a></h2><p>重要的事情说三遍, 需要渲染, 需要渲染, 需要渲染</p><h2 id="_3-渲染后还是不显示" tabindex="-1">3.渲染后还是不显示 <a class="header-anchor" href="#_3-渲染后还是不显示" aria-label="Permalink to &quot;3.渲染后还是不显示&quot;">​</a></h2><ul><li>打开控制台查看是否报错</li><li>加群: 660408068, 询问</li></ul><h2 id="_4-占位标签为什么是div" tabindex="-1">4.占位标签为什么是div <a class="header-anchor" href="#_4-占位标签为什么是div" aria-label="Permalink to &quot;4.占位标签为什么是div&quot;">​</a></h2><p>演示中使用的是div, 不限制标签, 但是不建议使用<code>select</code>, 因为<code>layui</code>会渲染<code>select</code>标签</p><h2 id="_5-动态数据渲染报错" tabindex="-1">5.动态数据渲染报错 <a class="header-anchor" href="#_5-动态数据渲染报错" aria-label="Permalink to &quot;5.动态数据渲染报错&quot;">​</a></h2><p>检查设置的data数据是否为数组类型</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">demo1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">xmSelect</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;#demo1&#39;</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: []</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//....N多操作以后</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//这里的data可能是ajax返回的数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//这里必须是 [object Array]</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//如果是 [object String]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//1. JSON数据</span></span>
<span class="line"><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//2. 类似JSON的数据</span></span>
<span class="line"><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">eval</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;(&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;)&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">demo1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,15),o=[p];function r(t,c,B,i,y,d){return a(),n("div",null,o)}const F=s(e,[["render",r]]);export{m as __pageData,F as default};
